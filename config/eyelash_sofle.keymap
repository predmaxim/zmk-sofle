#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    macros {
        vpn_menu: vpn_menu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(P)))>;
            label = "VPN_MENU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1    &kp N2        &kp N3  &kp N4     &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9         &kp N0      &kp BACKSPACE
&kp TAB         &kp Q     &kp W         &kp E   &kp R      &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O          &kp P       &kp BACKSLASH
&kp LEFT_SHIFT  &kp A     &kp S         &kp D   &kp F      &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L          &kp SEMI    &kp SINGLE_QUOTE
&kp LCTRL       &kp Z     &kp X         &kp C   &kp V      &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT        &kp FSLH    &kp PRINTSCREEN
&kp C_MUTE      &kp LGUI  &kp LEFT_ALT  &mo 1   &kp ENTER  &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &mo 2      &kp RIGHT_ALT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE        &trans   &trans   &trans  &trans  &trans     &mmv MOVE_UP     &trans     &trans        &trans    &trans         &trans            &trans
&trans           &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &mmv MOVE_DOWN   &kp PG_UP  &kp LC(LEFT)  &kp UP    &kp RC(RIGHT)  &kp MINUS         &kp EQUAL
&trans           &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT      &kp DOWN  &kp RIGHT      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&rgb_ug RGB_TOG  &kp F11  &kp F12  &trans  &trans  &trans     &mmv MOVE_RIGHT  &trans     &kp HOME      &kp INS   &kp END        &kp LEFT_BRACE    &kp RIGHT_BRACE
&kp C_MUTE       &trans   &trans   &trans  &trans  &trans     &mkp LCLK        &trans     &trans        &trans    &trans         &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans           &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans     &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &kp KP_MULTIPLY  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &trans
&trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp KP_DIVIDE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &trans
&trans  &sys_reset    &soft_off       &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &none            &kp NUMBER_0  &kp DOT       &kp COMMA     &trans     &trans
&trans  &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans           &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
