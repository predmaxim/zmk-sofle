#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    macros {
        vpn_menu: vpn_menu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LA(LC(P)))>;
            label = "VPN_MENU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        LAYER_0 {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8        &kp N9   &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W   &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I         &kp O    &kp P     &kp BACKSLASH
&kp LEFT_SHIFT  &kp A   &kp S   &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K         &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LCTRL       &kp Z   &kp X   &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA     &kp DOT  &kp FSLH  &kp DELETE
&kp C_MUTE      &trans  &trans  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp ENTER  &mo 2   &kp LEFT_GUI  &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER_0";
        };

        LAYER_1 {
            bindings = <
&trans      &trans  &trans  &trans  &trans  &trans     &trans  &trans   &trans    &trans    &trans     &trans         &trans
&trans      &trans  &trans  &trans  &trans  &trans     &trans  &trans   &trans    &trans    &trans     &trans         &trans
&trans      &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &trans  &kp F11  &kp HOME  &kp UP    &kp END    &kp PAGE_UP    &trans
&trans      &kp F6  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &kp F12  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN  &trans
&kp C_MUTE  &trans  &trans  &trans  &trans  &trans     &trans  &trans   &mo 3     &trans    &trans     &trans
            >;

            display-name = "LAYER_1";
            sensor-bindings = <&scroll_encoder>;
        };

        LAYER_2 {
            bindings = <
&trans  &trans    &trans       &trans    &trans      &trans         &trans  &trans          &trans         &trans        &trans      &trans         &trans
&trans  &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &trans  &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LPAR    &kp RPAR       &trans
&trans  &trans    &trans       &trans    &trans      &trans         &trans  &kp MINUS       &kp PLUS       &kp LBKT      &kp RBKT    &kp BACKSLASH  &kp GRAVE
&trans  &trans    &trans       &trans    &trans      &trans         &trans  &kp UNDERSCORE  &kp EQUAL      &kp KP_COMMA  &kp KP_DOT  &kp PIPE       &trans
&trans  &trans    &trans       &trans    &mo 3       &trans         &trans  &trans          &trans         &trans        &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        LAYER_3 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans           &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &bt BT_CLR      &trans  &kp PRINTSCREEN  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans           &trans  &trans  &trans  &trans
            >;
        };
    };
};
